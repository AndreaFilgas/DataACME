{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Revisando as possiveis Tabelas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.193654Z",
     "start_time": "2020-07-21T20:39:19.265321Z"
    }
   },
   "outputs": [],
   "source": [
    "# abrir bibliotecas\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import statsmodels.formula.api as smf\n",
    "import matplotlib.pyplot as plt\n",
    "from tqdm.auto import tqdm\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Base Final"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.282143Z",
     "start_time": "2020-07-21T20:39:22.198224Z"
    }
   },
   "outputs": [],
   "source": [
    "final = pd.read_csv('C:/Users/afilg/OneDrive/DATA SCIENCE/Aulas - Originais/Projeto_Integrador/final_test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.297233Z",
     "start_time": "2020-07-21T20:39:22.285806Z"
    }
   },
   "outputs": [],
   "source": [
    "final = final.drop(['Mês','Item','Data Portugues','on_streaming_date','Negative','Positive','All','movieyear','directors_1','directors_2','writers_1','writers_2','rating_num','tomatometer_rating','tomatometer_count','audience_want_to_see_count','audience_rating','audience_count','audience_top_critics_count','audience_fresh_critics_count','audience_rotten_critics_count','audience_fresh_top_critics_count','audience_rotten_rotten_critics_count','tomatometer_avg_rating','audience_top_critics_avg_rating','score_sentiment','startYear', 'log_rentability'], axis = 1)                           "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Dummização"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Generos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.317301Z",
     "start_time": "2020-07-21T20:39:22.302226Z"
    }
   },
   "outputs": [],
   "source": [
    "Genero1 = pd.get_dummies(final['genre_1'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.360492Z",
     "start_time": "2020-07-21T20:39:22.321011Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Action</th>\n",
       "      <th>Adventure</th>\n",
       "      <th>Animation</th>\n",
       "      <th>Biography</th>\n",
       "      <th>Comedy</th>\n",
       "      <th>Crime</th>\n",
       "      <th>Documentary</th>\n",
       "      <th>Drama</th>\n",
       "      <th>Fantasy</th>\n",
       "      <th>Horror</th>\n",
       "      <th>Musical</th>\n",
       "      <th>Mystery</th>\n",
       "      <th>Sci-Fi</th>\n",
       "      <th>Thriller</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Action  Adventure  Animation  Biography  Comedy  Crime  Documentary  Drama  \\\n",
       "0       0          0          0          0       0      0            0      1   \n",
       "1       0          0          0          0       0      0            0      0   \n",
       "2       1          0          0          0       0      0            0      0   \n",
       "3       1          0          0          0       0      0            0      0   \n",
       "4       0          0          0          0       1      0            0      0   \n",
       "\n",
       "   Fantasy  Horror  Musical  Mystery  Sci-Fi  Thriller  \n",
       "0        0       0        0        0       0         0  \n",
       "1        0       1        0        0       0         0  \n",
       "2        0       0        0        0       0         0  \n",
       "3        0       0        0        0       0         0  \n",
       "4        0       0        0        0       0         0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Genero1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.376538Z",
     "start_time": "2020-07-21T20:39:22.364150Z"
    }
   },
   "outputs": [],
   "source": [
    "Genero2 = pd.get_dummies(final['genre_2'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.411062Z",
     "start_time": "2020-07-21T20:39:22.379946Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Adventure</th>\n",
       "      <th>Animation</th>\n",
       "      <th>Biography</th>\n",
       "      <th>Comedy</th>\n",
       "      <th>Crime</th>\n",
       "      <th>Documentary</th>\n",
       "      <th>Drama</th>\n",
       "      <th>Family</th>\n",
       "      <th>Fantasy</th>\n",
       "      <th>History</th>\n",
       "      <th>Horror</th>\n",
       "      <th>Music</th>\n",
       "      <th>Musical</th>\n",
       "      <th>Mystery</th>\n",
       "      <th>Romance</th>\n",
       "      <th>Sci-Fi</th>\n",
       "      <th>Sport</th>\n",
       "      <th>Thriller</th>\n",
       "      <th>War</th>\n",
       "      <th>Western</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Adventure  Animation  Biography  Comedy  Crime  Documentary  Drama  Family  \\\n",
       "0          0          0          0       0      0            0      0       0   \n",
       "1          0          0          0       0      0            0      0       0   \n",
       "2          1          0          0       0      0            0      0       0   \n",
       "3          1          0          0       0      0            0      0       0   \n",
       "4          0          0          0       0      0            0      1       0   \n",
       "\n",
       "   Fantasy  History  Horror  Music  Musical  Mystery  Romance  Sci-Fi  Sport  \\\n",
       "0        0        0       0      1        0        0        0       0      0   \n",
       "1        0        0       0      0        0        1        0       0      0   \n",
       "2        0        0       0      0        0        0        0       0      0   \n",
       "3        0        0       0      0        0        0        0       0      0   \n",
       "4        0        0       0      0        0        0        0       0      0   \n",
       "\n",
       "   Thriller  War  Western  \n",
       "0         0    0        0  \n",
       "1         0    0        0  \n",
       "2         0    0        0  \n",
       "3         0    0        0  \n",
       "4         0    0        0  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Genero2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.428005Z",
     "start_time": "2020-07-21T20:39:22.415480Z"
    }
   },
   "outputs": [],
   "source": [
    "Genero3 = pd.get_dummies(final['genre_3'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.456318Z",
     "start_time": "2020-07-21T20:39:22.431284Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Animation</th>\n",
       "      <th>Biography</th>\n",
       "      <th>Comedy</th>\n",
       "      <th>Crime</th>\n",
       "      <th>Drama</th>\n",
       "      <th>Family</th>\n",
       "      <th>Fantasy</th>\n",
       "      <th>History</th>\n",
       "      <th>Horror</th>\n",
       "      <th>Music</th>\n",
       "      <th>Musical</th>\n",
       "      <th>Mystery</th>\n",
       "      <th>Romance</th>\n",
       "      <th>Sci-Fi</th>\n",
       "      <th>Sport</th>\n",
       "      <th>Thriller</th>\n",
       "      <th>War</th>\n",
       "      <th>Western</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Animation  Biography  Comedy  Crime  Drama  Family  Fantasy  History  \\\n",
       "0          0          0       0      0      0       0        0        0   \n",
       "1          0          0       0      0      0       0        0        0   \n",
       "2          0          0       0      0      1       0        0        0   \n",
       "3          0          0       0      0      0       0        0        0   \n",
       "4          0          0       0      0      0       0        0        0   \n",
       "\n",
       "   Horror  Music  Musical  Mystery  Romance  Sci-Fi  Sport  Thriller  War  \\\n",
       "0       0      0        0        0        1       0      0         0    0   \n",
       "1       0      0        0        0        0       0      0         1    0   \n",
       "2       0      0        0        0        0       0      0         0    0   \n",
       "3       0      0        0        0        0       0      0         1    0   \n",
       "4       0      0        0        0        1       0      0         0    0   \n",
       "\n",
       "   Western  \n",
       "0        0  \n",
       "1        0  \n",
       "2        0  \n",
       "3        0  \n",
       "4        0  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Genero3.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.476231Z",
     "start_time": "2020-07-21T20:39:22.458930Z"
    }
   },
   "outputs": [],
   "source": [
    "Generos = Genero1.join(Genero2, rsuffix = \"_2\")\n",
    "Generos = Generos.join(Genero3, rsuffix = \"_3\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.553262Z",
     "start_time": "2020-07-21T20:39:22.479202Z"
    }
   },
   "outputs": [],
   "source": [
    "Generos['Adventure_Geral']=Generos['Adventure']+Generos['Adventure_2']\n",
    "Generos['Animation_Geral']=Generos['Animation']+Generos['Animation_2']+Generos['Animation_3']\n",
    "Generos['Biography_Geral']=Generos['Biography']+Generos['Biography_2']+Generos['Biography_3']\n",
    "Generos['Comedy_Geral']=Generos['Comedy']+Generos['Comedy_2']+Generos['Comedy_3']\n",
    "Generos['Crime_Geral']=Generos['Crime']+Generos['Crime_2']+Generos['Crime_3']\n",
    "Generos['Documentary_Geral']=Generos['Documentary']+Generos['Documentary_2']\n",
    "Generos['Drama_Geral']=Generos['Drama']+Generos['Drama_2']+Generos['Drama_3']\n",
    "Generos['Family_Geral']=Generos['Family']+Generos['Family_3']\n",
    "Generos['Fantasy_Geral']=Generos['Fantasy']+Generos['Fantasy_2']+Generos['Fantasy_3']\n",
    "Generos['History_Geral']=Generos['History']+Generos['History_3']\n",
    "Generos['Horror_Geral']=Generos['Horror']+Generos['Horror_2']+Generos['Horror_3']\n",
    "Generos['Music_Geral']=Generos['Music']+Generos['Music_3']\n",
    "Generos['Musical_Geral']=Generos['Musical']+Generos['Musical_2']+Generos['Musical_3']\n",
    "Generos['Mystery_Geral']=Generos['Mystery']+Generos['Mystery_2']+Generos['Mystery_3']\n",
    "Generos['Romance_Geral']=Generos['Romance']+Generos['Romance_3']\n",
    "Generos['Sci-Fi_Geral']=Generos['Sci-Fi']+Generos['Sci-Fi_2']+Generos['Sci-Fi_3']\n",
    "Generos['Sport_Geral']=Generos['Sport']+Generos['Sport_3']\n",
    "Generos['Thriller_Geral']=Generos['Thriller']+Generos['Thriller_2']+Generos['Thriller_3']\n",
    "Generos['War_Geral']=Generos['War']+Generos['War_3']\n",
    "Generos['Western_Geral']=Generos['Western']+Generos['Western_3']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.569713Z",
     "start_time": "2020-07-21T20:39:22.553262Z"
    }
   },
   "outputs": [],
   "source": [
    "Generos = Generos.drop(['Action','Adventure','Adventure_2','Animation','Animation_2','Animation_3','Biography','Biography_2','Biography_3','Comedy','Comedy_2','Comedy_3','Crime','Crime_2','Crime_3','Documentary','Documentary_2','Drama','Drama_2','Drama_3','Family','Family_3','Fantasy','Fantasy_2','Fantasy_3','History','History_3','Horror','Horror_2','Horror_3','Music','Music_3','Musical','Musical_2','Musical_3','Mystery','Mystery_2','Mystery_3','Romance','Romance_3','Sci-Fi','Sci-Fi_2','Sci-Fi_3','Sport','Sport_3','Thriller','Thriller_2','Thriller_3','War','War_3','Western','Western_3'],axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.614374Z",
     "start_time": "2020-07-21T20:39:22.570711Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Adventure_Geral</th>\n",
       "      <th>Animation_Geral</th>\n",
       "      <th>Biography_Geral</th>\n",
       "      <th>Comedy_Geral</th>\n",
       "      <th>Crime_Geral</th>\n",
       "      <th>Documentary_Geral</th>\n",
       "      <th>Drama_Geral</th>\n",
       "      <th>Family_Geral</th>\n",
       "      <th>Fantasy_Geral</th>\n",
       "      <th>History_Geral</th>\n",
       "      <th>Horror_Geral</th>\n",
       "      <th>Music_Geral</th>\n",
       "      <th>Musical_Geral</th>\n",
       "      <th>Mystery_Geral</th>\n",
       "      <th>Romance_Geral</th>\n",
       "      <th>Sci-Fi_Geral</th>\n",
       "      <th>Sport_Geral</th>\n",
       "      <th>Thriller_Geral</th>\n",
       "      <th>War_Geral</th>\n",
       "      <th>Western_Geral</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1474</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1475</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1476</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1477</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1478</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1479 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Adventure_Geral  Animation_Geral  Biography_Geral  Comedy_Geral  \\\n",
       "0                   0                0                0             0   \n",
       "1                   0                0                0             0   \n",
       "2                   1                0                0             0   \n",
       "3                   1                0                0             0   \n",
       "4                   0                0                0             1   \n",
       "...               ...              ...              ...           ...   \n",
       "1474                1                0                1             0   \n",
       "1475                0                0                0             1   \n",
       "1476                0                0                0             0   \n",
       "1477                0                0                0             0   \n",
       "1478                1                0                0             1   \n",
       "\n",
       "      Crime_Geral  Documentary_Geral  Drama_Geral  Family_Geral  \\\n",
       "0               0                  0            1             0   \n",
       "1               0                  0            0             0   \n",
       "2               0                  0            1             0   \n",
       "3               0                  0            0             0   \n",
       "4               0                  0            1             0   \n",
       "...           ...                ...          ...           ...   \n",
       "1474            0                  0            1             0   \n",
       "1475            0                  0            1             0   \n",
       "1476            0                  0            1             0   \n",
       "1477            0                  0            1             0   \n",
       "1478            0                  0            0             0   \n",
       "\n",
       "      Fantasy_Geral  History_Geral  Horror_Geral  Music_Geral  Musical_Geral  \\\n",
       "0                 0              0             0            1              0   \n",
       "1                 0              0             1            0              0   \n",
       "2                 0              0             0            0              0   \n",
       "3                 0              0             0            0              0   \n",
       "4                 0              0             0            0              0   \n",
       "...             ...            ...           ...          ...            ...   \n",
       "1474              0              0             0            0              0   \n",
       "1475              0              0             0            0              0   \n",
       "1476              0              0             0            0              0   \n",
       "1477              0              0             1            0              0   \n",
       "1478              0              0             0            0              0   \n",
       "\n",
       "      Mystery_Geral  Romance_Geral  Sci-Fi_Geral  Sport_Geral  Thriller_Geral  \\\n",
       "0                 0              1             0            0               0   \n",
       "1                 1              0             0            0               1   \n",
       "2                 0              0             0            0               0   \n",
       "3                 0              0             0            0               1   \n",
       "4                 0              1             0            0               0   \n",
       "...             ...            ...           ...          ...             ...   \n",
       "1474              0              0             0            0               0   \n",
       "1475              0              0             0            0               0   \n",
       "1476              0              0             0            0               0   \n",
       "1477              1              0             0            0               0   \n",
       "1478              0              0             0            0               0   \n",
       "\n",
       "      War_Geral  Western_Geral  \n",
       "0             0              0  \n",
       "1             0              0  \n",
       "2             0              0  \n",
       "3             0              0  \n",
       "4             0              0  \n",
       "...         ...            ...  \n",
       "1474          0              0  \n",
       "1475          0              0  \n",
       "1476          0              0  \n",
       "1477          0              0  \n",
       "1478          0              0  \n",
       "\n",
       "[1479 rows x 20 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Generos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.629653Z",
     "start_time": "2020-07-21T20:39:22.616364Z"
    }
   },
   "outputs": [],
   "source": [
    "final_generos = final.join(Generos)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.652233Z",
     "start_time": "2020-07-21T20:39:22.631909Z"
    }
   },
   "outputs": [],
   "source": [
    "final_generos = final_generos.drop(['genre_1','genre_2','genre_3'], axis = 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Estudios"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.693437Z",
     "start_time": "2020-07-21T20:39:22.653232Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tconst</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>studio_name</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>20th Century Fox</th>\n",
       "      <td>122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20th Century Fox Distribution</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20th Century Fox/Regency Films</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A24</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A24 Films</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Working Title Films</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yari Film Group</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yari Film Group Releasing</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zion Films</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>s</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>235 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                tconst\n",
       "studio_name                           \n",
       "20th Century Fox                   122\n",
       "20th Century Fox Distribution        1\n",
       "20th Century Fox/Regency Films       1\n",
       "A24                                  5\n",
       "A24 Films                            2\n",
       "...                                ...\n",
       "Working Title Films                  1\n",
       "Yari Film Group                      1\n",
       "Yari Film Group Releasing            1\n",
       "Zion Films                           1\n",
       "s                                    1\n",
       "\n",
       "[235 rows x 1 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp = pd.pivot_table(final_generos, values='tconst', index='studio_name', aggfunc='count')\n",
    "temp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.705521Z",
     "start_time": "2020-07-21T20:39:22.693437Z"
    }
   },
   "outputs": [],
   "source": [
    "studios = pd.read_csv('C:/Users/afilg/OneDrive/DATA SCIENCE/Aulas - Originais/Projeto_Integrador/test_2.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.730185Z",
     "start_time": "2020-07-21T20:39:22.707797Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>studio_name</th>\n",
       "      <th>new_studio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20th Century Fox</td>\n",
       "      <td>Big_Studio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20th Century Fox Distribution</td>\n",
       "      <td>Big_Studio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20th Century Fox/Regency Films</td>\n",
       "      <td>Big_Studio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Blue Sky Studio/20th Century Fox</td>\n",
       "      <td>Big_Studio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Fox Atomic</td>\n",
       "      <td>Big_Studio</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        studio_name  new_studio\n",
       "0                  20th Century Fox  Big_Studio\n",
       "1     20th Century Fox Distribution  Big_Studio\n",
       "2    20th Century Fox/Regency Films  Big_Studio\n",
       "3  Blue Sky Studio/20th Century Fox  Big_Studio\n",
       "4                        Fox Atomic  Big_Studio"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "studios.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.752669Z",
     "start_time": "2020-07-21T20:39:22.732674Z"
    }
   },
   "outputs": [],
   "source": [
    "final_generos = final_generos.join(studios.set_index('studio_name'), on = 'studio_name')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.771807Z",
     "start_time": "2020-07-21T20:39:22.754663Z"
    }
   },
   "outputs": [],
   "source": [
    "final_generos = final_generos.drop(['studio_name'], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.788580Z",
     "start_time": "2020-07-21T20:39:22.774906Z"
    }
   },
   "outputs": [],
   "source": [
    "studios = pd.get_dummies(final_generos['new_studio'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.811017Z",
     "start_time": "2020-07-21T20:39:22.791359Z"
    }
   },
   "outputs": [],
   "source": [
    "final_generos_studios = final_generos.join(studios)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.835107Z",
     "start_time": "2020-07-21T20:39:22.820186Z"
    }
   },
   "outputs": [],
   "source": [
    "final_generos_studios = final_generos_studios.drop(['new_studio'], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.887080Z",
     "start_time": "2020-07-21T20:39:22.840782Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1479 entries, 0 to 1478\n",
      "Data columns (total 60 columns):\n",
      " #   Column                     Non-Null Count  Dtype  \n",
      "---  ------                     --------------  -----  \n",
      " 0   Unnamed: 0                 1479 non-null   int64  \n",
      " 1   tconst                     1479 non-null   object \n",
      " 2   primaryTitle               1479 non-null   object \n",
      " 3   runtimeMinutes             1479 non-null   int64  \n",
      " 4   month                      1479 non-null   float64\n",
      " 5   day                        1479 non-null   float64\n",
      " 6   year                       1479 non-null   int64  \n",
      " 7   FW                         1479 non-null   int64  \n",
      " 8   Worldwide_Gross            1479 non-null   float64\n",
      " 9   Production_Budget          1479 non-null   float64\n",
      " 10  rentability                1479 non-null   float64\n",
      " 11  opening_theaters           1479 non-null   float64\n",
      " 12  average_run                1479 non-null   float64\n",
      " 13  rating                     1479 non-null   object \n",
      " 14  movie_info                 1479 non-null   object \n",
      " 15  tomatometer_status         1479 non-null   object \n",
      " 16  audience_status            1479 non-null   object \n",
      " 17  audience_avg_rating        1479 non-null   float64\n",
      " 18  negative_perc              1479 non-null   float64\n",
      " 19  positive_perc              1479 non-null   float64\n",
      " 20  NPremium_Indicado          1479 non-null   int64  \n",
      " 21  NPremium_Win               1479 non-null   int64  \n",
      " 22  Premium_Indicado           1479 non-null   int64  \n",
      " 23  Premium_Win                1479 non-null   int64  \n",
      " 24  averageRating              1479 non-null   float64\n",
      " 25  numVotes                   1479 non-null   int64  \n",
      " 26  directors_1_films          1479 non-null   int64  \n",
      " 27  directors_2_films          1479 non-null   int64  \n",
      " 28  directors_1_ratingAverage  1227 non-null   float64\n",
      " 29  directors_2_ratingAverage  78 non-null     float64\n",
      " 30  writer_1_films             1479 non-null   int64  \n",
      " 31  writer_2_films             1479 non-null   int64  \n",
      " 32  writer_1_ratingAverage     1018 non-null   float64\n",
      " 33  writer_2_ratingAverage     652 non-null    float64\n",
      " 34  AvgRating                  1350 non-null   float64\n",
      " 35  numFilmes                  1479 non-null   float64\n",
      " 36  num_crew                   1479 non-null   int64  \n",
      " 37  Adventure_Geral            1479 non-null   uint8  \n",
      " 38  Animation_Geral            1479 non-null   uint8  \n",
      " 39  Biography_Geral            1479 non-null   uint8  \n",
      " 40  Comedy_Geral               1479 non-null   uint8  \n",
      " 41  Crime_Geral                1479 non-null   uint8  \n",
      " 42  Documentary_Geral          1479 non-null   uint8  \n",
      " 43  Drama_Geral                1479 non-null   uint8  \n",
      " 44  Family_Geral               1479 non-null   uint8  \n",
      " 45  Fantasy_Geral              1479 non-null   uint8  \n",
      " 46  History_Geral              1479 non-null   uint8  \n",
      " 47  Horror_Geral               1479 non-null   uint8  \n",
      " 48  Music_Geral                1479 non-null   uint8  \n",
      " 49  Musical_Geral              1479 non-null   uint8  \n",
      " 50  Mystery_Geral              1479 non-null   uint8  \n",
      " 51  Romance_Geral              1479 non-null   uint8  \n",
      " 52  Sci-Fi_Geral               1479 non-null   uint8  \n",
      " 53  Sport_Geral                1479 non-null   uint8  \n",
      " 54  Thriller_Geral             1479 non-null   uint8  \n",
      " 55  War_Geral                  1479 non-null   uint8  \n",
      " 56  Western_Geral              1479 non-null   uint8  \n",
      " 57  Big_Studio                 1479 non-null   uint8  \n",
      " 58  Known_Studio               1479 non-null   uint8  \n",
      " 59  independent                1479 non-null   uint8  \n",
      "dtypes: float64(17), int64(14), object(6), uint8(23)\n",
      "memory usage: 460.9+ KB\n"
     ]
    }
   ],
   "source": [
    "final_generos_studios.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.899203Z",
     "start_time": "2020-07-21T20:39:22.890874Z"
    }
   },
   "outputs": [],
   "source": [
    "final_generos_studios_rt = final_generos_studios"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.914995Z",
     "start_time": "2020-07-21T20:39:22.902882Z"
    }
   },
   "outputs": [],
   "source": [
    "final_generos_studios_rt = final_generos_studios_rt.drop(['tomatometer_status','audience_status'], axis = 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-18T02:41:48.235843Z",
     "start_time": "2020-07-18T02:41:48.230819Z"
    }
   },
   "source": [
    "## Ratings\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.934656Z",
     "start_time": "2020-07-21T20:39:22.918664Z"
    }
   },
   "outputs": [],
   "source": [
    "rating = pd.get_dummies(final_generos_studios_rt['rating'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.962844Z",
     "start_time": "2020-07-21T20:39:22.938922Z"
    }
   },
   "outputs": [],
   "source": [
    "final_generos_studios_rt = final_generos_studios_rt.join(rating)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:22.983523Z",
     "start_time": "2020-07-21T20:39:22.968142Z"
    }
   },
   "outputs": [],
   "source": [
    "final_generos_studios_rt = final_generos_studios_rt.drop(['rating'], axis = 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T11:48:10.889349Z",
     "start_time": "2020-07-21T11:48:10.885359Z"
    }
   },
   "source": [
    "## Releases"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:23.003264Z",
     "start_time": "2020-07-21T20:39:22.986953Z"
    }
   },
   "outputs": [],
   "source": [
    "release_type = []\n",
    "\n",
    "for i in final_generos_studios_rt['opening_theaters']:\n",
    "    if i <= 600:\n",
    "        d = 'limited release'\n",
    "    else:\n",
    "        d = 'Wide release'\n",
    "    release_type.append(d)\n",
    "    \n",
    "final_generos_studios_rt['release_type'] = release_type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:23.018882Z",
     "start_time": "2020-07-21T20:39:23.007566Z"
    }
   },
   "outputs": [],
   "source": [
    "release = pd.get_dummies(final_generos_studios_rt['release_type'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:23.042379Z",
     "start_time": "2020-07-21T20:39:23.022215Z"
    }
   },
   "outputs": [],
   "source": [
    "final_generos_studios_rt = final_generos_studios_rt.join(release)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:23.065430Z",
     "start_time": "2020-07-21T20:39:23.046365Z"
    }
   },
   "outputs": [],
   "source": [
    "final_generos_studios_rt = final_generos_studios_rt.fillna(0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:37:36.482789Z",
     "start_time": "2020-07-21T20:37:36.476598Z"
    }
   },
   "source": [
    "# Ajuste das Variaveis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:23.081542Z",
     "start_time": "2020-07-21T20:39:23.068066Z"
    },
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "final_generos_studios_rt = final_generos_studios_rt.drop(['Unnamed: 0','rentability','directors_2_films','directors_2_ratingAverage','writer_2_films','writer_2_ratingAverage','audience_avg_rating','NPremium_Indicado','NPremium_Win','Premium_Indicado','Premium_Win','month','negative_perc', 'day', 'year','movie_info', 'num_crew', 'average_run', 'opening_theaters','release_type'], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:39:49.944346Z",
     "start_time": "2020-07-21T20:39:49.917763Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>tconst</th>\n",
       "      <td>tt0118589</td>\n",
       "      <td>tt0120681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>primaryTitle</th>\n",
       "      <td>Glitter</td>\n",
       "      <td>From Hell</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>runtimeMinutes</th>\n",
       "      <td>104</td>\n",
       "      <td>122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FW</th>\n",
       "      <td>38</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Worldwide_Gross</th>\n",
       "      <td>4.27337e+06</td>\n",
       "      <td>6.87124e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Production_Budget</th>\n",
       "      <td>8.5e+06</td>\n",
       "      <td>3.5e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>positive_perc</th>\n",
       "      <td>46.4286</td>\n",
       "      <td>66.6667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>averageRating</th>\n",
       "      <td>2.2</td>\n",
       "      <td>6.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numVotes</th>\n",
       "      <td>21167</td>\n",
       "      <td>143578</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>directors_1_films</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>directors_1_ratingAverage</th>\n",
       "      <td>6.9</td>\n",
       "      <td>7.31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>writer_1_films</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>writer_1_ratingAverage</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AvgRating</th>\n",
       "      <td>5.8</td>\n",
       "      <td>6.25821</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numFilmes</th>\n",
       "      <td>0.25</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Adventure_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Animation_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Biography_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Comedy_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Crime_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Documentary_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Drama_Geral</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Family_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fantasy_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>History_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Horror_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Music_Geral</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Musical_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mystery_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Romance_Geral</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sci-Fi_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sport_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Thriller_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>War_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Western_Geral</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Big_Studio</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Known_Studio</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>independent</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>G</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NR</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PG</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PG-13</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>R</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wide release</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>limited release</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                     0            1\n",
       "tconst                       tt0118589    tt0120681\n",
       "primaryTitle                   Glitter    From Hell\n",
       "runtimeMinutes                     104          122\n",
       "FW                                  38           42\n",
       "Worldwide_Gross            4.27337e+06  6.87124e+07\n",
       "Production_Budget              8.5e+06      3.5e+07\n",
       "positive_perc                  46.4286      66.6667\n",
       "averageRating                      2.2          6.8\n",
       "numVotes                         21167       143578\n",
       "directors_1_films                    1            3\n",
       "directors_1_ratingAverage          6.9         7.31\n",
       "writer_1_films                       0            0\n",
       "writer_1_ratingAverage               0            0\n",
       "AvgRating                          5.8      6.25821\n",
       "numFilmes                         0.25            1\n",
       "Adventure_Geral                      0            0\n",
       "Animation_Geral                      0            0\n",
       "Biography_Geral                      0            0\n",
       "Comedy_Geral                         0            0\n",
       "Crime_Geral                          0            0\n",
       "Documentary_Geral                    0            0\n",
       "Drama_Geral                          1            0\n",
       "Family_Geral                         0            0\n",
       "Fantasy_Geral                        0            0\n",
       "History_Geral                        0            0\n",
       "Horror_Geral                         0            1\n",
       "Music_Geral                          1            0\n",
       "Musical_Geral                        0            0\n",
       "Mystery_Geral                        0            1\n",
       "Romance_Geral                        1            0\n",
       "Sci-Fi_Geral                         0            0\n",
       "Sport_Geral                          0            0\n",
       "Thriller_Geral                       0            1\n",
       "War_Geral                            0            0\n",
       "Western_Geral                        0            0\n",
       "Big_Studio                           1            1\n",
       "Known_Studio                         0            0\n",
       "independent                          0            0\n",
       "G                                    0            0\n",
       "NR                                   0            0\n",
       "PG                                   0            0\n",
       "PG-13                                1            0\n",
       "R                                    0            1\n",
       "Wide release                         1            1\n",
       "limited release                      0            0"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_generos_studios_rt.head(2).T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-17T19:22:06.078344Z",
     "start_time": "2020-07-17T19:22:06.066110Z"
    }
   },
   "source": [
    "# K-Mean"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:40:43.239284Z",
     "start_time": "2020-07-21T20:40:43.229997Z"
    }
   },
   "outputs": [],
   "source": [
    "columns = final_generos_studios_rt.drop(['tconst','primaryTitle','Worldwide_Gross','averageRating','numVotes','positive_perc' ], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:40:53.807628Z",
     "start_time": "2020-07-21T20:40:53.795187Z"
    }
   },
   "outputs": [],
   "source": [
    "X_sample = columns.values \n",
    "y_sample = final_generos_studios_rt.loc[:,'Worldwide_Gross'].values "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:41:19.796336Z",
     "start_time": "2020-07-21T20:41:19.340147Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,\n",
       "       n_clusters=7, n_init=10, n_jobs=None, precompute_distances='auto',\n",
       "       random_state=None, tol=0.0001, verbose=0)"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "kmeans = KMeans(n_clusters=7)\n",
    "kmeans.fit(X_sample)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:41:23.612695Z",
     "start_time": "2020-07-21T20:41:23.601756Z"
    }
   },
   "outputs": [],
   "source": [
    "final_generos_studios_rt['cluster'] = kmeans.labels_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Boosting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:41:36.536260Z",
     "start_time": "2020-07-21T20:41:36.506896Z"
    }
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn.model_selection import train_test_split\n",
    "import xgboost as xgb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:41:37.715279Z",
     "start_time": "2020-07-21T20:41:37.699751Z"
    }
   },
   "outputs": [],
   "source": [
    "semmin = final_generos_studios_rt.copy()\n",
    "\n",
    "columns = semmin.drop(['tconst','primaryTitle','Worldwide_Gross'], axis=1)\n",
    "\n",
    "X= columns\n",
    "# variável target\n",
    "y = np.log(semmin['Worldwide_Gross'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:41:39.468301Z",
     "start_time": "2020-07-21T20:41:39.201650Z"
    }
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import PowerTransformer\n",
    "X = PowerTransformer(method='yeo-johnson').fit_transform(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:41:40.407062Z",
     "start_time": "2020-07-21T20:41:40.393490Z"
    }
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:41:41.491097Z",
     "start_time": "2020-07-21T20:41:41.480156Z"
    }
   },
   "outputs": [],
   "source": [
    "dtrain = xgb.DMatrix(X_train, label=y_train)\n",
    "dtest = xgb.DMatrix(X_test, label=y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:42:32.952682Z",
     "start_time": "2020-07-21T20:42:32.944324Z"
    }
   },
   "outputs": [],
   "source": [
    "params = {# Parameters that we are going to tune.\n",
    "            'max_depth':6,\n",
    "            'min_child_weight': 1,\n",
    "            'eta':.3,\n",
    "            'subsample': 1,\n",
    "            'colsample_bytree': 1}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:42:34.134966Z",
     "start_time": "2020-07-21T20:42:34.127321Z"
    }
   },
   "outputs": [],
   "source": [
    "params['max_depth'] = 9\n",
    "params['min_child_weight'] = 6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:42:35.170542Z",
     "start_time": "2020-07-21T20:42:35.161857Z"
    }
   },
   "outputs": [],
   "source": [
    "params['subsample'] = 1.0\n",
    "params['colsample_bytree'] = 1.0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:42:36.206051Z",
     "start_time": "2020-07-21T20:42:36.198302Z"
    }
   },
   "outputs": [],
   "source": [
    "params['eta'] = .01"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:42:37.207494Z",
     "start_time": "2020-07-21T20:42:37.201611Z"
    }
   },
   "outputs": [],
   "source": [
    "params['eval_metric'] = \"mae\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:48:18.872320Z",
     "start_time": "2020-07-21T20:47:58.455975Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tTest-mae:17.0503\n",
      "[1]\tTest-mae:16.8787\n",
      "[2]\tTest-mae:16.7088\n",
      "[3]\tTest-mae:16.5407\n",
      "[4]\tTest-mae:16.3755\n",
      "[5]\tTest-mae:16.2114\n",
      "[6]\tTest-mae:16.0495\n",
      "[7]\tTest-mae:15.8888\n",
      "[8]\tTest-mae:15.7301\n",
      "[9]\tTest-mae:15.5724\n",
      "[10]\tTest-mae:15.4169\n",
      "[11]\tTest-mae:15.2625\n",
      "[12]\tTest-mae:15.1101\n",
      "[13]\tTest-mae:14.9586\n",
      "[14]\tTest-mae:14.8092\n",
      "[15]\tTest-mae:14.6609\n",
      "[16]\tTest-mae:14.5145\n",
      "[17]\tTest-mae:14.369\n",
      "[18]\tTest-mae:14.2257\n",
      "[19]\tTest-mae:14.0832\n",
      "[20]\tTest-mae:13.9428\n",
      "[21]\tTest-mae:13.8039\n",
      "[22]\tTest-mae:13.6655\n",
      "[23]\tTest-mae:13.5294\n",
      "[24]\tTest-mae:13.3939\n",
      "[25]\tTest-mae:13.26\n",
      "[26]\tTest-mae:13.1275\n",
      "[27]\tTest-mae:12.9967\n",
      "[28]\tTest-mae:12.8665\n",
      "[29]\tTest-mae:12.7379\n",
      "[30]\tTest-mae:12.6106\n",
      "[31]\tTest-mae:12.4837\n",
      "[32]\tTest-mae:12.3586\n",
      "[33]\tTest-mae:12.235\n",
      "[34]\tTest-mae:12.1127\n",
      "[35]\tTest-mae:11.9914\n",
      "[36]\tTest-mae:11.8706\n",
      "[37]\tTest-mae:11.7523\n",
      "[38]\tTest-mae:11.6345\n",
      "[39]\tTest-mae:11.518\n",
      "[40]\tTest-mae:11.4028\n",
      "[41]\tTest-mae:11.2879\n",
      "[42]\tTest-mae:11.175\n",
      "[43]\tTest-mae:11.0632\n",
      "[44]\tTest-mae:10.9517\n",
      "[45]\tTest-mae:10.8422\n",
      "[46]\tTest-mae:10.7334\n",
      "[47]\tTest-mae:10.626\n",
      "[48]\tTest-mae:10.52\n",
      "[49]\tTest-mae:10.4147\n",
      "[50]\tTest-mae:10.3097\n",
      "[51]\tTest-mae:10.2071\n",
      "[52]\tTest-mae:10.105\n",
      "[53]\tTest-mae:10.0036\n",
      "[54]\tTest-mae:9.90264\n",
      "[55]\tTest-mae:9.80355\n",
      "[56]\tTest-mae:9.70567\n",
      "[57]\tTest-mae:9.60844\n",
      "[58]\tTest-mae:9.5125\n",
      "[59]\tTest-mae:9.41715\n",
      "[60]\tTest-mae:9.32207\n",
      "[61]\tTest-mae:9.22862\n",
      "[62]\tTest-mae:9.13676\n",
      "[63]\tTest-mae:9.04516\n",
      "[64]\tTest-mae:8.95513\n",
      "[65]\tTest-mae:8.86515\n",
      "[66]\tTest-mae:8.77634\n",
      "[67]\tTest-mae:8.68862\n",
      "[68]\tTest-mae:8.6021\n",
      "[69]\tTest-mae:8.51578\n",
      "[70]\tTest-mae:8.43028\n",
      "[71]\tTest-mae:8.34616\n",
      "[72]\tTest-mae:8.26245\n",
      "[73]\tTest-mae:8.17963\n",
      "[74]\tTest-mae:8.09816\n",
      "[75]\tTest-mae:8.01652\n",
      "[76]\tTest-mae:7.93601\n",
      "[77]\tTest-mae:7.85695\n",
      "[78]\tTest-mae:7.77826\n",
      "[79]\tTest-mae:7.70014\n",
      "[80]\tTest-mae:7.62287\n",
      "[81]\tTest-mae:7.5465\n",
      "[82]\tTest-mae:7.47068\n",
      "[83]\tTest-mae:7.39593\n",
      "[84]\tTest-mae:7.32167\n",
      "[85]\tTest-mae:7.2484\n",
      "[86]\tTest-mae:7.17561\n",
      "[87]\tTest-mae:7.1038\n",
      "[88]\tTest-mae:7.03239\n",
      "[89]\tTest-mae:6.96195\n",
      "[90]\tTest-mae:6.89212\n",
      "[91]\tTest-mae:6.82325\n",
      "[92]\tTest-mae:6.75478\n",
      "[93]\tTest-mae:6.6871\n",
      "[94]\tTest-mae:6.62001\n",
      "[95]\tTest-mae:6.55363\n",
      "[96]\tTest-mae:6.48784\n",
      "[97]\tTest-mae:6.42314\n",
      "[98]\tTest-mae:6.35908\n",
      "[99]\tTest-mae:6.29525\n",
      "[100]\tTest-mae:6.23259\n",
      "[101]\tTest-mae:6.16992\n",
      "[102]\tTest-mae:6.10822\n",
      "[103]\tTest-mae:6.04697\n",
      "[104]\tTest-mae:5.98627\n",
      "[105]\tTest-mae:5.92638\n",
      "[106]\tTest-mae:5.867\n",
      "[107]\tTest-mae:5.80829\n",
      "[108]\tTest-mae:5.75005\n",
      "[109]\tTest-mae:5.6925\n",
      "[110]\tTest-mae:5.63548\n",
      "[111]\tTest-mae:5.5791\n",
      "[112]\tTest-mae:5.52393\n",
      "[113]\tTest-mae:5.469\n",
      "[114]\tTest-mae:5.41459\n",
      "[115]\tTest-mae:5.36074\n",
      "[116]\tTest-mae:5.30705\n",
      "[117]\tTest-mae:5.25427\n",
      "[118]\tTest-mae:5.2017\n",
      "[119]\tTest-mae:5.14995\n",
      "[120]\tTest-mae:5.09873\n",
      "[121]\tTest-mae:5.04773\n",
      "[122]\tTest-mae:4.99751\n",
      "[123]\tTest-mae:4.94764\n",
      "[124]\tTest-mae:4.89841\n",
      "[125]\tTest-mae:4.84963\n",
      "[126]\tTest-mae:4.80102\n",
      "[127]\tTest-mae:4.75325\n",
      "[128]\tTest-mae:4.70594\n",
      "[129]\tTest-mae:4.65923\n",
      "[130]\tTest-mae:4.61247\n",
      "[131]\tTest-mae:4.56681\n",
      "[132]\tTest-mae:4.52126\n",
      "[133]\tTest-mae:4.4761\n",
      "[134]\tTest-mae:4.43123\n",
      "[135]\tTest-mae:4.3871\n",
      "[136]\tTest-mae:4.34309\n",
      "[137]\tTest-mae:4.29949\n",
      "[138]\tTest-mae:4.25652\n",
      "[139]\tTest-mae:4.21391\n",
      "[140]\tTest-mae:4.17149\n",
      "[141]\tTest-mae:4.1296\n",
      "[142]\tTest-mae:4.08848\n",
      "[143]\tTest-mae:4.04739\n",
      "[144]\tTest-mae:4.00717\n",
      "[145]\tTest-mae:3.96741\n",
      "[146]\tTest-mae:3.92774\n",
      "[147]\tTest-mae:3.88872\n",
      "[148]\tTest-mae:3.84987\n",
      "[149]\tTest-mae:3.81168\n",
      "[150]\tTest-mae:3.77386\n",
      "[151]\tTest-mae:3.73636\n",
      "[152]\tTest-mae:3.69969\n",
      "[153]\tTest-mae:3.66281\n",
      "[154]\tTest-mae:3.62649\n",
      "[155]\tTest-mae:3.59074\n",
      "[156]\tTest-mae:3.55585\n",
      "[157]\tTest-mae:3.52089\n",
      "[158]\tTest-mae:3.48637\n",
      "[159]\tTest-mae:3.45208\n",
      "[160]\tTest-mae:3.41797\n",
      "[161]\tTest-mae:3.38447\n",
      "[162]\tTest-mae:3.35111\n",
      "[163]\tTest-mae:3.31796\n",
      "[164]\tTest-mae:3.28561\n",
      "[165]\tTest-mae:3.25342\n",
      "[166]\tTest-mae:3.22154\n",
      "[167]\tTest-mae:3.18974\n",
      "[168]\tTest-mae:3.15835\n",
      "[169]\tTest-mae:3.12748\n",
      "[170]\tTest-mae:3.09667\n",
      "[171]\tTest-mae:3.06624\n",
      "[172]\tTest-mae:3.03593\n",
      "[173]\tTest-mae:3.00665\n",
      "[174]\tTest-mae:2.97715\n",
      "[175]\tTest-mae:2.9481\n",
      "[176]\tTest-mae:2.91959\n",
      "[177]\tTest-mae:2.89088\n",
      "[178]\tTest-mae:2.86275\n",
      "[179]\tTest-mae:2.83495\n",
      "[180]\tTest-mae:2.80693\n",
      "[181]\tTest-mae:2.77958\n",
      "[182]\tTest-mae:2.75279\n",
      "[183]\tTest-mae:2.72654\n",
      "[184]\tTest-mae:2.69986\n",
      "[185]\tTest-mae:2.67412\n",
      "[186]\tTest-mae:2.64802\n",
      "[187]\tTest-mae:2.62291\n",
      "[188]\tTest-mae:2.59809\n",
      "[189]\tTest-mae:2.57287\n",
      "[190]\tTest-mae:2.54837\n",
      "[191]\tTest-mae:2.5243\n",
      "[192]\tTest-mae:2.49982\n",
      "[193]\tTest-mae:2.47589\n",
      "[194]\tTest-mae:2.45243\n",
      "[195]\tTest-mae:2.42913\n",
      "[196]\tTest-mae:2.40602\n",
      "[197]\tTest-mae:2.38319\n",
      "[198]\tTest-mae:2.36022\n",
      "[199]\tTest-mae:2.33809\n",
      "[200]\tTest-mae:2.31602\n",
      "[201]\tTest-mae:2.29445\n",
      "[202]\tTest-mae:2.27296\n",
      "[203]\tTest-mae:2.25168\n",
      "[204]\tTest-mae:2.23059\n",
      "[205]\tTest-mae:2.21001\n",
      "[206]\tTest-mae:2.18939\n",
      "[207]\tTest-mae:2.16912\n",
      "[208]\tTest-mae:2.14943\n",
      "[209]\tTest-mae:2.12976\n",
      "[210]\tTest-mae:2.11009\n",
      "[211]\tTest-mae:2.09098\n",
      "[212]\tTest-mae:2.07162\n",
      "[213]\tTest-mae:2.05281\n",
      "[214]\tTest-mae:2.03386\n",
      "[215]\tTest-mae:2.01537\n",
      "[216]\tTest-mae:1.99712\n",
      "[217]\tTest-mae:1.9792\n",
      "[218]\tTest-mae:1.96145\n",
      "[219]\tTest-mae:1.94388\n",
      "[220]\tTest-mae:1.92609\n",
      "[221]\tTest-mae:1.90816\n",
      "[222]\tTest-mae:1.8912\n",
      "[223]\tTest-mae:1.87446\n",
      "[224]\tTest-mae:1.85708\n",
      "[225]\tTest-mae:1.84061\n",
      "[226]\tTest-mae:1.82465\n",
      "[227]\tTest-mae:1.80823\n",
      "[228]\tTest-mae:1.79212\n",
      "[229]\tTest-mae:1.77674\n",
      "[230]\tTest-mae:1.76164\n",
      "[231]\tTest-mae:1.74632\n",
      "[232]\tTest-mae:1.73138\n",
      "[233]\tTest-mae:1.71678\n",
      "[234]\tTest-mae:1.7025\n",
      "[235]\tTest-mae:1.68804\n",
      "[236]\tTest-mae:1.67414\n",
      "[237]\tTest-mae:1.6599\n",
      "[238]\tTest-mae:1.64628\n",
      "[239]\tTest-mae:1.63256\n",
      "[240]\tTest-mae:1.61905\n",
      "[241]\tTest-mae:1.60602\n",
      "[242]\tTest-mae:1.5928\n",
      "[243]\tTest-mae:1.57998\n",
      "[244]\tTest-mae:1.567\n",
      "[245]\tTest-mae:1.55447\n",
      "[246]\tTest-mae:1.54197\n",
      "[247]\tTest-mae:1.52919\n",
      "[248]\tTest-mae:1.51682\n",
      "[249]\tTest-mae:1.50449\n",
      "[250]\tTest-mae:1.49255\n",
      "[251]\tTest-mae:1.48096\n",
      "[252]\tTest-mae:1.469\n",
      "[253]\tTest-mae:1.4576\n",
      "[254]\tTest-mae:1.44636\n",
      "[255]\tTest-mae:1.43506\n",
      "[256]\tTest-mae:1.424\n",
      "[257]\tTest-mae:1.41287\n",
      "[258]\tTest-mae:1.40171\n",
      "[259]\tTest-mae:1.39089\n",
      "[260]\tTest-mae:1.38072\n",
      "[261]\tTest-mae:1.3705\n",
      "[262]\tTest-mae:1.36021\n",
      "[263]\tTest-mae:1.35009\n",
      "[264]\tTest-mae:1.34007\n",
      "[265]\tTest-mae:1.33012\n",
      "[266]\tTest-mae:1.32059\n",
      "[267]\tTest-mae:1.31078\n",
      "[268]\tTest-mae:1.30095\n",
      "[269]\tTest-mae:1.29154\n",
      "[270]\tTest-mae:1.28244\n",
      "[271]\tTest-mae:1.27338\n",
      "[272]\tTest-mae:1.26453\n",
      "[273]\tTest-mae:1.25569\n",
      "[274]\tTest-mae:1.24692\n",
      "[275]\tTest-mae:1.23824\n",
      "[276]\tTest-mae:1.22991\n",
      "[277]\tTest-mae:1.22148\n",
      "[278]\tTest-mae:1.21296\n",
      "[279]\tTest-mae:1.2047\n",
      "[280]\tTest-mae:1.19677\n",
      "[281]\tTest-mae:1.18872\n",
      "[282]\tTest-mae:1.18083\n",
      "[283]\tTest-mae:1.17291\n",
      "[284]\tTest-mae:1.16518\n",
      "[285]\tTest-mae:1.15742\n",
      "[286]\tTest-mae:1.14979\n",
      "[287]\tTest-mae:1.14227\n",
      "[288]\tTest-mae:1.13473\n",
      "[289]\tTest-mae:1.12744\n",
      "[290]\tTest-mae:1.1201\n",
      "[291]\tTest-mae:1.11273\n",
      "[292]\tTest-mae:1.10569\n",
      "[293]\tTest-mae:1.09859\n",
      "[294]\tTest-mae:1.09182\n",
      "[295]\tTest-mae:1.08498\n",
      "[296]\tTest-mae:1.07819\n",
      "[297]\tTest-mae:1.07165\n",
      "[298]\tTest-mae:1.06515\n",
      "[299]\tTest-mae:1.05867\n",
      "[300]\tTest-mae:1.05246\n",
      "[301]\tTest-mae:1.04631\n",
      "[302]\tTest-mae:1.04014\n",
      "[303]\tTest-mae:1.03408\n",
      "[304]\tTest-mae:1.02798\n",
      "[305]\tTest-mae:1.02218\n",
      "[306]\tTest-mae:1.01657\n",
      "[307]\tTest-mae:1.01081\n",
      "[308]\tTest-mae:1.00535\n",
      "[309]\tTest-mae:0.999891\n",
      "[310]\tTest-mae:0.994415\n",
      "[311]\tTest-mae:0.988882\n",
      "[312]\tTest-mae:0.983704\n",
      "[313]\tTest-mae:0.978722\n",
      "[314]\tTest-mae:0.973656\n",
      "[315]\tTest-mae:0.968627\n",
      "[316]\tTest-mae:0.963508\n",
      "[317]\tTest-mae:0.958498\n",
      "[318]\tTest-mae:0.953969\n",
      "[319]\tTest-mae:0.949458\n",
      "[320]\tTest-mae:0.945079\n",
      "[321]\tTest-mae:0.9405\n",
      "[322]\tTest-mae:0.936153\n",
      "[323]\tTest-mae:0.931751\n",
      "[324]\tTest-mae:0.927399\n",
      "[325]\tTest-mae:0.922937\n",
      "[326]\tTest-mae:0.918638\n",
      "[327]\tTest-mae:0.91447\n",
      "[328]\tTest-mae:0.910691\n",
      "[329]\tTest-mae:0.906626\n",
      "[330]\tTest-mae:0.902617\n",
      "[331]\tTest-mae:0.898736\n",
      "[332]\tTest-mae:0.894881\n",
      "[333]\tTest-mae:0.891014\n",
      "[334]\tTest-mae:0.887252\n",
      "[335]\tTest-mae:0.883715\n",
      "[336]\tTest-mae:0.880225\n",
      "[337]\tTest-mae:0.876703\n",
      "[338]\tTest-mae:0.87321\n",
      "[339]\tTest-mae:0.869632\n",
      "[340]\tTest-mae:0.866467\n",
      "[341]\tTest-mae:0.863198\n",
      "[342]\tTest-mae:0.859946\n",
      "[343]\tTest-mae:0.856786\n",
      "[344]\tTest-mae:0.853553\n",
      "[345]\tTest-mae:0.850298\n",
      "[346]\tTest-mae:0.84696\n",
      "[347]\tTest-mae:0.844162\n",
      "[348]\tTest-mae:0.841147\n",
      "[349]\tTest-mae:0.838\n",
      "[350]\tTest-mae:0.834871\n",
      "[351]\tTest-mae:0.831609\n",
      "[352]\tTest-mae:0.828498\n",
      "[353]\tTest-mae:0.82565\n",
      "[354]\tTest-mae:0.822774\n",
      "[355]\tTest-mae:0.819959\n",
      "[356]\tTest-mae:0.817132\n",
      "[357]\tTest-mae:0.814532\n",
      "[358]\tTest-mae:0.81175\n",
      "[359]\tTest-mae:0.809163\n",
      "[360]\tTest-mae:0.806367\n",
      "[361]\tTest-mae:0.803678\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[362]\tTest-mae:0.800992\n",
      "[363]\tTest-mae:0.79855\n",
      "[364]\tTest-mae:0.796025\n",
      "[365]\tTest-mae:0.793526\n",
      "[366]\tTest-mae:0.791101\n",
      "[367]\tTest-mae:0.788556\n",
      "[368]\tTest-mae:0.786249\n",
      "[369]\tTest-mae:0.783996\n",
      "[370]\tTest-mae:0.781657\n",
      "[371]\tTest-mae:0.779501\n",
      "[372]\tTest-mae:0.777343\n",
      "[373]\tTest-mae:0.775342\n",
      "[374]\tTest-mae:0.772972\n",
      "[375]\tTest-mae:0.77092\n",
      "[376]\tTest-mae:0.768575\n",
      "[377]\tTest-mae:0.76655\n",
      "[378]\tTest-mae:0.76458\n",
      "[379]\tTest-mae:0.76234\n",
      "[380]\tTest-mae:0.760454\n",
      "[381]\tTest-mae:0.758227\n",
      "[382]\tTest-mae:0.756115\n",
      "[383]\tTest-mae:0.754364\n",
      "[384]\tTest-mae:0.752324\n",
      "[385]\tTest-mae:0.750352\n",
      "[386]\tTest-mae:0.748372\n",
      "[387]\tTest-mae:0.746664\n",
      "[388]\tTest-mae:0.744831\n",
      "[389]\tTest-mae:0.743086\n",
      "[390]\tTest-mae:0.741412\n",
      "[391]\tTest-mae:0.739849\n",
      "[392]\tTest-mae:0.738054\n",
      "[393]\tTest-mae:0.736395\n",
      "[394]\tTest-mae:0.734719\n",
      "[395]\tTest-mae:0.733257\n",
      "[396]\tTest-mae:0.731697\n",
      "[397]\tTest-mae:0.730051\n",
      "[398]\tTest-mae:0.728656\n",
      "[399]\tTest-mae:0.727108\n",
      "[400]\tTest-mae:0.725715\n",
      "[401]\tTest-mae:0.724485\n",
      "[402]\tTest-mae:0.723036\n",
      "[403]\tTest-mae:0.721713\n",
      "[404]\tTest-mae:0.72038\n",
      "[405]\tTest-mae:0.719288\n",
      "[406]\tTest-mae:0.718042\n",
      "[407]\tTest-mae:0.717005\n",
      "[408]\tTest-mae:0.715763\n",
      "[409]\tTest-mae:0.714673\n",
      "[410]\tTest-mae:0.713325\n",
      "[411]\tTest-mae:0.712161\n",
      "[412]\tTest-mae:0.710787\n",
      "[413]\tTest-mae:0.709504\n",
      "[414]\tTest-mae:0.708198\n",
      "[415]\tTest-mae:0.70707\n",
      "[416]\tTest-mae:0.706042\n",
      "[417]\tTest-mae:0.705007\n",
      "[418]\tTest-mae:0.703926\n",
      "[419]\tTest-mae:0.702834\n",
      "[420]\tTest-mae:0.7018\n",
      "[421]\tTest-mae:0.700599\n",
      "[422]\tTest-mae:0.69959\n",
      "[423]\tTest-mae:0.698561\n",
      "[424]\tTest-mae:0.697688\n",
      "[425]\tTest-mae:0.696664\n",
      "[426]\tTest-mae:0.695935\n",
      "[427]\tTest-mae:0.695109\n",
      "[428]\tTest-mae:0.694146\n",
      "[429]\tTest-mae:0.693359\n",
      "[430]\tTest-mae:0.692522\n",
      "[431]\tTest-mae:0.691571\n",
      "[432]\tTest-mae:0.690786\n",
      "[433]\tTest-mae:0.690088\n",
      "[434]\tTest-mae:0.689332\n",
      "[435]\tTest-mae:0.688694\n",
      "[436]\tTest-mae:0.687893\n",
      "[437]\tTest-mae:0.687084\n",
      "[438]\tTest-mae:0.686359\n",
      "[439]\tTest-mae:0.685588\n",
      "[440]\tTest-mae:0.685072\n",
      "[441]\tTest-mae:0.684525\n",
      "[442]\tTest-mae:0.683835\n",
      "[443]\tTest-mae:0.683147\n",
      "[444]\tTest-mae:0.682446\n",
      "[445]\tTest-mae:0.681825\n",
      "[446]\tTest-mae:0.681146\n",
      "[447]\tTest-mae:0.680509\n",
      "[448]\tTest-mae:0.679736\n",
      "[449]\tTest-mae:0.67908\n",
      "[450]\tTest-mae:0.67858\n",
      "[451]\tTest-mae:0.67809\n",
      "[452]\tTest-mae:0.677507\n",
      "[453]\tTest-mae:0.676873\n",
      "[454]\tTest-mae:0.676279\n",
      "[455]\tTest-mae:0.675705\n",
      "[456]\tTest-mae:0.675174\n",
      "[457]\tTest-mae:0.67447\n",
      "[458]\tTest-mae:0.673789\n",
      "[459]\tTest-mae:0.673259\n",
      "[460]\tTest-mae:0.672716\n",
      "[461]\tTest-mae:0.672175\n",
      "[462]\tTest-mae:0.671622\n",
      "[463]\tTest-mae:0.67101\n",
      "[464]\tTest-mae:0.670513\n",
      "[465]\tTest-mae:0.670091\n",
      "[466]\tTest-mae:0.669855\n",
      "[467]\tTest-mae:0.669401\n",
      "[468]\tTest-mae:0.668753\n",
      "[469]\tTest-mae:0.668172\n",
      "[470]\tTest-mae:0.667592\n",
      "[471]\tTest-mae:0.667042\n",
      "[472]\tTest-mae:0.666459\n",
      "[473]\tTest-mae:0.666244\n",
      "[474]\tTest-mae:0.665662\n",
      "[475]\tTest-mae:0.665443\n",
      "[476]\tTest-mae:0.664971\n",
      "[477]\tTest-mae:0.66443\n",
      "[478]\tTest-mae:0.663847\n",
      "[479]\tTest-mae:0.663462\n",
      "[480]\tTest-mae:0.663091\n",
      "[481]\tTest-mae:0.662529\n",
      "[482]\tTest-mae:0.66236\n",
      "[483]\tTest-mae:0.661967\n",
      "[484]\tTest-mae:0.661739\n",
      "[485]\tTest-mae:0.66127\n",
      "[486]\tTest-mae:0.660852\n",
      "[487]\tTest-mae:0.660616\n",
      "[488]\tTest-mae:0.66039\n",
      "[489]\tTest-mae:0.659861\n",
      "[490]\tTest-mae:0.659342\n",
      "[491]\tTest-mae:0.65896\n",
      "[492]\tTest-mae:0.658728\n",
      "[493]\tTest-mae:0.658522\n",
      "[494]\tTest-mae:0.65801\n",
      "[495]\tTest-mae:0.657511\n",
      "[496]\tTest-mae:0.656944\n",
      "[497]\tTest-mae:0.656476\n",
      "[498]\tTest-mae:0.656138\n",
      "[499]\tTest-mae:0.655664\n",
      "[500]\tTest-mae:0.655335\n",
      "[501]\tTest-mae:0.654932\n",
      "[502]\tTest-mae:0.654569\n",
      "[503]\tTest-mae:0.654433\n",
      "[504]\tTest-mae:0.654065\n",
      "[505]\tTest-mae:0.653852\n",
      "[506]\tTest-mae:0.65357\n",
      "[507]\tTest-mae:0.653128\n",
      "[508]\tTest-mae:0.652882\n",
      "[509]\tTest-mae:0.652552\n",
      "[510]\tTest-mae:0.652213\n",
      "[511]\tTest-mae:0.652141\n",
      "[512]\tTest-mae:0.651956\n",
      "[513]\tTest-mae:0.651704\n",
      "[514]\tTest-mae:0.651586\n",
      "[515]\tTest-mae:0.651254\n",
      "[516]\tTest-mae:0.650993\n",
      "[517]\tTest-mae:0.650684\n",
      "[518]\tTest-mae:0.650411\n",
      "[519]\tTest-mae:0.650119\n",
      "[520]\tTest-mae:0.649707\n",
      "[521]\tTest-mae:0.649555\n",
      "[522]\tTest-mae:0.64922\n",
      "[523]\tTest-mae:0.648921\n",
      "[524]\tTest-mae:0.64869\n",
      "[525]\tTest-mae:0.648353\n",
      "[526]\tTest-mae:0.648074\n",
      "[527]\tTest-mae:0.647808\n",
      "[528]\tTest-mae:0.647655\n",
      "[529]\tTest-mae:0.647335\n",
      "[530]\tTest-mae:0.647108\n",
      "[531]\tTest-mae:0.646899\n",
      "[532]\tTest-mae:0.646643\n",
      "[533]\tTest-mae:0.646452\n",
      "[534]\tTest-mae:0.646282\n",
      "[535]\tTest-mae:0.645949\n",
      "[536]\tTest-mae:0.645685\n",
      "[537]\tTest-mae:0.64544\n",
      "[538]\tTest-mae:0.645231\n",
      "[539]\tTest-mae:0.645071\n",
      "[540]\tTest-mae:0.644848\n",
      "[541]\tTest-mae:0.644665\n",
      "[542]\tTest-mae:0.64438\n",
      "[543]\tTest-mae:0.644185\n",
      "[544]\tTest-mae:0.643968\n",
      "[545]\tTest-mae:0.643802\n",
      "[546]\tTest-mae:0.643684\n",
      "[547]\tTest-mae:0.643456\n",
      "[548]\tTest-mae:0.643394\n",
      "[549]\tTest-mae:0.643215\n",
      "[550]\tTest-mae:0.643043\n",
      "[551]\tTest-mae:0.642842\n",
      "[552]\tTest-mae:0.642792\n",
      "[553]\tTest-mae:0.642615\n",
      "[554]\tTest-mae:0.642388\n",
      "[555]\tTest-mae:0.642273\n",
      "[556]\tTest-mae:0.642142\n",
      "[557]\tTest-mae:0.641941\n",
      "[558]\tTest-mae:0.641788\n",
      "[559]\tTest-mae:0.64154\n",
      "[560]\tTest-mae:0.641528\n",
      "[561]\tTest-mae:0.641303\n",
      "[562]\tTest-mae:0.641286\n",
      "[563]\tTest-mae:0.641062\n",
      "[564]\tTest-mae:0.640956\n",
      "[565]\tTest-mae:0.640721\n",
      "[566]\tTest-mae:0.640713\n",
      "[567]\tTest-mae:0.640588\n",
      "[568]\tTest-mae:0.640598\n",
      "[569]\tTest-mae:0.640583\n",
      "[570]\tTest-mae:0.640375\n",
      "[571]\tTest-mae:0.640256\n",
      "[572]\tTest-mae:0.64004\n",
      "[573]\tTest-mae:0.639863\n",
      "[574]\tTest-mae:0.639748\n",
      "[575]\tTest-mae:0.639663\n",
      "[576]\tTest-mae:0.639658\n",
      "[577]\tTest-mae:0.639628\n",
      "[578]\tTest-mae:0.639556\n",
      "[579]\tTest-mae:0.639426\n",
      "[580]\tTest-mae:0.639348\n",
      "[581]\tTest-mae:0.639301\n",
      "[582]\tTest-mae:0.639255\n",
      "[583]\tTest-mae:0.639278\n",
      "[584]\tTest-mae:0.639187\n",
      "[585]\tTest-mae:0.639068\n",
      "[586]\tTest-mae:0.639084\n",
      "[587]\tTest-mae:0.63891\n",
      "[588]\tTest-mae:0.638846\n",
      "[589]\tTest-mae:0.638781\n",
      "[590]\tTest-mae:0.638822\n",
      "[591]\tTest-mae:0.638705\n",
      "[592]\tTest-mae:0.638655\n",
      "[593]\tTest-mae:0.638716\n",
      "[594]\tTest-mae:0.638611\n",
      "[595]\tTest-mae:0.638643\n",
      "[596]\tTest-mae:0.638643\n",
      "[597]\tTest-mae:0.638379\n",
      "[598]\tTest-mae:0.638283\n",
      "[599]\tTest-mae:0.638217\n",
      "[600]\tTest-mae:0.638217\n",
      "[601]\tTest-mae:0.638131\n",
      "[602]\tTest-mae:0.638194\n",
      "[603]\tTest-mae:0.638064\n",
      "[604]\tTest-mae:0.638118\n",
      "[605]\tTest-mae:0.63812\n",
      "[606]\tTest-mae:0.638047\n",
      "[607]\tTest-mae:0.638027\n",
      "[608]\tTest-mae:0.63791\n",
      "[609]\tTest-mae:0.637937\n",
      "[610]\tTest-mae:0.63793\n",
      "[611]\tTest-mae:0.637918\n",
      "[612]\tTest-mae:0.63795\n",
      "[613]\tTest-mae:0.63794\n",
      "[614]\tTest-mae:0.63796\n",
      "[615]\tTest-mae:0.638022\n",
      "[616]\tTest-mae:0.637996\n",
      "[617]\tTest-mae:0.637913\n",
      "[618]\tTest-mae:0.637891\n",
      "[619]\tTest-mae:0.637886\n",
      "[620]\tTest-mae:0.637863\n",
      "[621]\tTest-mae:0.637841\n",
      "[622]\tTest-mae:0.637773\n",
      "[623]\tTest-mae:0.637766\n",
      "[624]\tTest-mae:0.637765\n",
      "[625]\tTest-mae:0.637776\n",
      "[626]\tTest-mae:0.637755\n",
      "[627]\tTest-mae:0.63774\n",
      "[628]\tTest-mae:0.637716\n",
      "[629]\tTest-mae:0.637668\n",
      "[630]\tTest-mae:0.637569\n",
      "[631]\tTest-mae:0.637521\n",
      "[632]\tTest-mae:0.637535\n",
      "[633]\tTest-mae:0.637455\n",
      "[634]\tTest-mae:0.637323\n",
      "[635]\tTest-mae:0.637375\n",
      "[636]\tTest-mae:0.637214\n",
      "[637]\tTest-mae:0.637201\n",
      "[638]\tTest-mae:0.637203\n",
      "[639]\tTest-mae:0.637217\n",
      "[640]\tTest-mae:0.637227\n",
      "[641]\tTest-mae:0.637207\n",
      "[642]\tTest-mae:0.637076\n",
      "[643]\tTest-mae:0.637036\n",
      "[644]\tTest-mae:0.637107\n",
      "[645]\tTest-mae:0.637126\n",
      "[646]\tTest-mae:0.637012\n",
      "[647]\tTest-mae:0.637023\n",
      "[648]\tTest-mae:0.637034\n",
      "[649]\tTest-mae:0.636787\n",
      "[650]\tTest-mae:0.636659\n",
      "[651]\tTest-mae:0.636653\n",
      "[652]\tTest-mae:0.636628\n",
      "[653]\tTest-mae:0.636606\n",
      "[654]\tTest-mae:0.636759\n",
      "[655]\tTest-mae:0.636833\n",
      "[656]\tTest-mae:0.636733\n",
      "[657]\tTest-mae:0.636758\n",
      "[658]\tTest-mae:0.636736\n",
      "[659]\tTest-mae:0.636729\n",
      "[660]\tTest-mae:0.636641\n",
      "[661]\tTest-mae:0.636617\n",
      "[662]\tTest-mae:0.636728\n",
      "[663]\tTest-mae:0.636825\n",
      "[664]\tTest-mae:0.636717\n",
      "[665]\tTest-mae:0.636616\n",
      "[666]\tTest-mae:0.636515\n",
      "[667]\tTest-mae:0.636559\n",
      "[668]\tTest-mae:0.636535\n",
      "[669]\tTest-mae:0.636596\n",
      "[670]\tTest-mae:0.636667\n",
      "[671]\tTest-mae:0.636546\n",
      "[672]\tTest-mae:0.636613\n",
      "[673]\tTest-mae:0.636642\n",
      "[674]\tTest-mae:0.636568\n",
      "[675]\tTest-mae:0.636671\n",
      "[676]\tTest-mae:0.636677\n",
      "[677]\tTest-mae:0.636862\n",
      "[678]\tTest-mae:0.636783\n",
      "[679]\tTest-mae:0.636729\n",
      "[680]\tTest-mae:0.636675\n",
      "[681]\tTest-mae:0.636781\n",
      "[682]\tTest-mae:0.636701\n",
      "[683]\tTest-mae:0.636778\n",
      "[684]\tTest-mae:0.636727\n",
      "[685]\tTest-mae:0.636649\n",
      "[686]\tTest-mae:0.636715\n",
      "[687]\tTest-mae:0.636821\n",
      "[688]\tTest-mae:0.636762\n",
      "[689]\tTest-mae:0.636709\n",
      "[690]\tTest-mae:0.636751\n",
      "[691]\tTest-mae:0.636709\n",
      "[692]\tTest-mae:0.63671\n",
      "[693]\tTest-mae:0.636539\n",
      "[694]\tTest-mae:0.636506\n",
      "[695]\tTest-mae:0.63653\n",
      "[696]\tTest-mae:0.636348\n",
      "[697]\tTest-mae:0.636348\n",
      "[698]\tTest-mae:0.63628\n",
      "[699]\tTest-mae:0.636336\n",
      "[700]\tTest-mae:0.63625\n",
      "[701]\tTest-mae:0.636127\n",
      "[702]\tTest-mae:0.636123\n",
      "[703]\tTest-mae:0.636119\n",
      "[704]\tTest-mae:0.636049\n",
      "[705]\tTest-mae:0.636052\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[706]\tTest-mae:0.636019\n",
      "[707]\tTest-mae:0.636007\n",
      "[708]\tTest-mae:0.636053\n",
      "[709]\tTest-mae:0.636101\n",
      "[710]\tTest-mae:0.636058\n",
      "[711]\tTest-mae:0.636111\n",
      "[712]\tTest-mae:0.636063\n",
      "[713]\tTest-mae:0.635898\n",
      "[714]\tTest-mae:0.635892\n",
      "[715]\tTest-mae:0.635855\n",
      "[716]\tTest-mae:0.635898\n",
      "[717]\tTest-mae:0.635921\n",
      "[718]\tTest-mae:0.635889\n",
      "[719]\tTest-mae:0.635886\n",
      "[720]\tTest-mae:0.63591\n",
      "[721]\tTest-mae:0.635962\n",
      "[722]\tTest-mae:0.635984\n",
      "[723]\tTest-mae:0.635826\n",
      "[724]\tTest-mae:0.63572\n",
      "[725]\tTest-mae:0.635689\n",
      "[726]\tTest-mae:0.635557\n",
      "[727]\tTest-mae:0.635523\n",
      "[728]\tTest-mae:0.63547\n",
      "[729]\tTest-mae:0.635516\n",
      "[730]\tTest-mae:0.635468\n",
      "[731]\tTest-mae:0.63548\n",
      "[732]\tTest-mae:0.635427\n",
      "[733]\tTest-mae:0.6354\n",
      "[734]\tTest-mae:0.63542\n",
      "[735]\tTest-mae:0.635356\n",
      "[736]\tTest-mae:0.635397\n",
      "[737]\tTest-mae:0.635412\n",
      "[738]\tTest-mae:0.635348\n",
      "[739]\tTest-mae:0.635408\n",
      "[740]\tTest-mae:0.635317\n",
      "[741]\tTest-mae:0.635291\n",
      "[742]\tTest-mae:0.63537\n",
      "[743]\tTest-mae:0.63533\n",
      "[744]\tTest-mae:0.635257\n",
      "[745]\tTest-mae:0.635166\n",
      "[746]\tTest-mae:0.635144\n",
      "[747]\tTest-mae:0.635039\n",
      "[748]\tTest-mae:0.635032\n",
      "[749]\tTest-mae:0.635019\n",
      "[750]\tTest-mae:0.63505\n",
      "[751]\tTest-mae:0.634963\n",
      "[752]\tTest-mae:0.635\n",
      "[753]\tTest-mae:0.634912\n",
      "[754]\tTest-mae:0.634831\n",
      "[755]\tTest-mae:0.634788\n",
      "[756]\tTest-mae:0.634664\n",
      "[757]\tTest-mae:0.634603\n",
      "[758]\tTest-mae:0.634418\n",
      "[759]\tTest-mae:0.634336\n",
      "[760]\tTest-mae:0.634281\n",
      "[761]\tTest-mae:0.634296\n",
      "[762]\tTest-mae:0.634242\n",
      "[763]\tTest-mae:0.634282\n",
      "[764]\tTest-mae:0.634235\n",
      "[765]\tTest-mae:0.634276\n",
      "[766]\tTest-mae:0.634225\n",
      "[767]\tTest-mae:0.634164\n",
      "[768]\tTest-mae:0.634191\n",
      "[769]\tTest-mae:0.634092\n",
      "[770]\tTest-mae:0.634021\n",
      "[771]\tTest-mae:0.634075\n",
      "[772]\tTest-mae:0.63394\n",
      "[773]\tTest-mae:0.633923\n",
      "[774]\tTest-mae:0.633851\n",
      "[775]\tTest-mae:0.633837\n",
      "[776]\tTest-mae:0.6338\n",
      "[777]\tTest-mae:0.633852\n",
      "[778]\tTest-mae:0.633952\n",
      "[779]\tTest-mae:0.63387\n",
      "[780]\tTest-mae:0.634011\n",
      "[781]\tTest-mae:0.633909\n",
      "[782]\tTest-mae:0.633859\n",
      "[783]\tTest-mae:0.634015\n",
      "[784]\tTest-mae:0.634031\n",
      "[785]\tTest-mae:0.634027\n",
      "[786]\tTest-mae:0.633976\n",
      "[787]\tTest-mae:0.633919\n",
      "[788]\tTest-mae:0.633943\n",
      "[789]\tTest-mae:0.633906\n",
      "[790]\tTest-mae:0.633918\n",
      "[791]\tTest-mae:0.634053\n",
      "[792]\tTest-mae:0.634141\n",
      "[793]\tTest-mae:0.63412\n",
      "[794]\tTest-mae:0.634162\n",
      "[795]\tTest-mae:0.634111\n",
      "[796]\tTest-mae:0.634045\n",
      "[797]\tTest-mae:0.634045\n",
      "[798]\tTest-mae:0.634117\n",
      "[799]\tTest-mae:0.634079\n",
      "[800]\tTest-mae:0.634005\n",
      "[801]\tTest-mae:0.634022\n",
      "[802]\tTest-mae:0.634047\n",
      "[803]\tTest-mae:0.633988\n",
      "[804]\tTest-mae:0.633928\n",
      "[805]\tTest-mae:0.633919\n",
      "[806]\tTest-mae:0.633925\n",
      "[807]\tTest-mae:0.633835\n",
      "[808]\tTest-mae:0.633925\n",
      "[809]\tTest-mae:0.633851\n",
      "[810]\tTest-mae:0.633841\n",
      "[811]\tTest-mae:0.633776\n",
      "[812]\tTest-mae:0.633817\n",
      "[813]\tTest-mae:0.633859\n",
      "[814]\tTest-mae:0.633848\n",
      "[815]\tTest-mae:0.633795\n",
      "[816]\tTest-mae:0.633788\n",
      "[817]\tTest-mae:0.633721\n",
      "[818]\tTest-mae:0.63372\n",
      "[819]\tTest-mae:0.63362\n",
      "[820]\tTest-mae:0.633658\n",
      "[821]\tTest-mae:0.633687\n",
      "[822]\tTest-mae:0.633678\n",
      "[823]\tTest-mae:0.633606\n",
      "[824]\tTest-mae:0.633769\n",
      "[825]\tTest-mae:0.633832\n",
      "[826]\tTest-mae:0.633753\n",
      "[827]\tTest-mae:0.633834\n",
      "[828]\tTest-mae:0.633829\n",
      "[829]\tTest-mae:0.633839\n",
      "[830]\tTest-mae:0.633732\n",
      "[831]\tTest-mae:0.63381\n",
      "[832]\tTest-mae:0.633727\n",
      "[833]\tTest-mae:0.633675\n",
      "[834]\tTest-mae:0.633752\n",
      "[835]\tTest-mae:0.63384\n",
      "[836]\tTest-mae:0.633872\n",
      "[837]\tTest-mae:0.633906\n",
      "[838]\tTest-mae:0.633943\n",
      "[839]\tTest-mae:0.633974\n",
      "[840]\tTest-mae:0.634026\n",
      "[841]\tTest-mae:0.634045\n",
      "[842]\tTest-mae:0.634009\n",
      "[843]\tTest-mae:0.634028\n",
      "[844]\tTest-mae:0.634046\n",
      "[845]\tTest-mae:0.633991\n",
      "[846]\tTest-mae:0.63392\n",
      "[847]\tTest-mae:0.63386\n",
      "[848]\tTest-mae:0.633883\n",
      "[849]\tTest-mae:0.633901\n",
      "[850]\tTest-mae:0.633966\n",
      "[851]\tTest-mae:0.634015\n",
      "[852]\tTest-mae:0.633993\n",
      "[853]\tTest-mae:0.634012\n",
      "[854]\tTest-mae:0.633989\n",
      "[855]\tTest-mae:0.63401\n",
      "[856]\tTest-mae:0.634097\n",
      "[857]\tTest-mae:0.634136\n",
      "[858]\tTest-mae:0.63413\n",
      "[859]\tTest-mae:0.634151\n",
      "[860]\tTest-mae:0.634085\n",
      "[861]\tTest-mae:0.634016\n",
      "[862]\tTest-mae:0.634019\n",
      "[863]\tTest-mae:0.634017\n",
      "[864]\tTest-mae:0.634033\n",
      "[865]\tTest-mae:0.634022\n",
      "[866]\tTest-mae:0.634032\n",
      "[867]\tTest-mae:0.634035\n",
      "[868]\tTest-mae:0.633949\n",
      "[869]\tTest-mae:0.633942\n",
      "[870]\tTest-mae:0.633886\n",
      "[871]\tTest-mae:0.633968\n",
      "[872]\tTest-mae:0.634079\n",
      "[873]\tTest-mae:0.634016\n",
      "[874]\tTest-mae:0.633964\n",
      "[875]\tTest-mae:0.633994\n",
      "[876]\tTest-mae:0.633986\n",
      "[877]\tTest-mae:0.633973\n",
      "[878]\tTest-mae:0.633945\n",
      "[879]\tTest-mae:0.633939\n",
      "[880]\tTest-mae:0.633918\n",
      "[881]\tTest-mae:0.633856\n",
      "[882]\tTest-mae:0.633892\n",
      "[883]\tTest-mae:0.633871\n",
      "[884]\tTest-mae:0.633871\n",
      "[885]\tTest-mae:0.633863\n",
      "[886]\tTest-mae:0.633802\n",
      "[887]\tTest-mae:0.633792\n",
      "[888]\tTest-mae:0.633732\n",
      "[889]\tTest-mae:0.633686\n",
      "[890]\tTest-mae:0.63366\n",
      "[891]\tTest-mae:0.633646\n",
      "[892]\tTest-mae:0.633613\n",
      "[893]\tTest-mae:0.633588\n",
      "[894]\tTest-mae:0.633592\n",
      "[895]\tTest-mae:0.633507\n",
      "[896]\tTest-mae:0.633551\n",
      "[897]\tTest-mae:0.633573\n",
      "[898]\tTest-mae:0.633534\n",
      "[899]\tTest-mae:0.633499\n",
      "[900]\tTest-mae:0.633477\n",
      "[901]\tTest-mae:0.633448\n",
      "[902]\tTest-mae:0.633379\n",
      "[903]\tTest-mae:0.633347\n",
      "[904]\tTest-mae:0.633294\n",
      "[905]\tTest-mae:0.633301\n",
      "[906]\tTest-mae:0.633363\n",
      "[907]\tTest-mae:0.633333\n",
      "[908]\tTest-mae:0.633325\n",
      "[909]\tTest-mae:0.63319\n",
      "[910]\tTest-mae:0.633231\n",
      "[911]\tTest-mae:0.633248\n",
      "[912]\tTest-mae:0.633242\n",
      "[913]\tTest-mae:0.633251\n",
      "[914]\tTest-mae:0.633121\n",
      "[915]\tTest-mae:0.633142\n",
      "[916]\tTest-mae:0.633039\n",
      "[917]\tTest-mae:0.632986\n",
      "[918]\tTest-mae:0.633001\n",
      "[919]\tTest-mae:0.632998\n",
      "[920]\tTest-mae:0.632875\n",
      "[921]\tTest-mae:0.632872\n",
      "[922]\tTest-mae:0.632778\n",
      "[923]\tTest-mae:0.632669\n",
      "[924]\tTest-mae:0.632668\n",
      "[925]\tTest-mae:0.632554\n",
      "[926]\tTest-mae:0.632557\n",
      "[927]\tTest-mae:0.632574\n",
      "[928]\tTest-mae:0.632517\n",
      "[929]\tTest-mae:0.632472\n",
      "[930]\tTest-mae:0.63245\n",
      "[931]\tTest-mae:0.632394\n",
      "[932]\tTest-mae:0.632335\n",
      "[933]\tTest-mae:0.632277\n",
      "[934]\tTest-mae:0.632237\n",
      "[935]\tTest-mae:0.632187\n",
      "[936]\tTest-mae:0.632161\n",
      "[937]\tTest-mae:0.632173\n",
      "[938]\tTest-mae:0.632138\n",
      "[939]\tTest-mae:0.632112\n",
      "[940]\tTest-mae:0.632137\n",
      "[941]\tTest-mae:0.632079\n",
      "[942]\tTest-mae:0.632041\n",
      "[943]\tTest-mae:0.632023\n",
      "[944]\tTest-mae:0.631967\n",
      "[945]\tTest-mae:0.632025\n",
      "[946]\tTest-mae:0.631984\n",
      "[947]\tTest-mae:0.632083\n",
      "[948]\tTest-mae:0.63217\n",
      "[949]\tTest-mae:0.632077\n",
      "[950]\tTest-mae:0.631986\n",
      "[951]\tTest-mae:0.631988\n",
      "[952]\tTest-mae:0.631924\n",
      "[953]\tTest-mae:0.631936\n",
      "[954]\tTest-mae:0.632022\n",
      "[955]\tTest-mae:0.632107\n",
      "[956]\tTest-mae:0.632092\n",
      "[957]\tTest-mae:0.631981\n",
      "[958]\tTest-mae:0.632062\n",
      "[959]\tTest-mae:0.632107\n",
      "[960]\tTest-mae:0.63206\n",
      "[961]\tTest-mae:0.632064\n",
      "[962]\tTest-mae:0.632128\n",
      "[963]\tTest-mae:0.632058\n",
      "[964]\tTest-mae:0.632107\n",
      "[965]\tTest-mae:0.632093\n",
      "[966]\tTest-mae:0.632146\n",
      "[967]\tTest-mae:0.632125\n",
      "[968]\tTest-mae:0.632112\n",
      "[969]\tTest-mae:0.632065\n",
      "[970]\tTest-mae:0.632089\n",
      "[971]\tTest-mae:0.632073\n",
      "[972]\tTest-mae:0.632098\n",
      "[973]\tTest-mae:0.632128\n",
      "[974]\tTest-mae:0.632108\n",
      "[975]\tTest-mae:0.632129\n",
      "[976]\tTest-mae:0.63222\n",
      "[977]\tTest-mae:0.632239\n",
      "[978]\tTest-mae:0.632219\n",
      "[979]\tTest-mae:0.632229\n",
      "[980]\tTest-mae:0.632242\n",
      "[981]\tTest-mae:0.632252\n",
      "[982]\tTest-mae:0.632267\n",
      "[983]\tTest-mae:0.632355\n",
      "[984]\tTest-mae:0.632402\n",
      "[985]\tTest-mae:0.6323\n",
      "[986]\tTest-mae:0.632327\n",
      "[987]\tTest-mae:0.632367\n",
      "[988]\tTest-mae:0.632452\n",
      "[989]\tTest-mae:0.632351\n",
      "[990]\tTest-mae:0.632313\n",
      "[991]\tTest-mae:0.632345\n",
      "[992]\tTest-mae:0.632371\n",
      "[993]\tTest-mae:0.6324\n",
      "[994]\tTest-mae:0.632401\n",
      "[995]\tTest-mae:0.632441\n",
      "[996]\tTest-mae:0.632476\n",
      "[997]\tTest-mae:0.632486\n",
      "[998]\tTest-mae:0.632527\n"
     ]
    }
   ],
   "source": [
    "num_boost_round = 999\n",
    "\n",
    "best_model = xgb.train(\n",
    "    params,\n",
    "    dtrain,\n",
    "    num_boost_round=num_boost_round,\n",
    "    evals=[(dtest, \"Test\")]\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:45:37.421459Z",
     "start_time": "2020-07-21T20:45:37.413867Z"
    }
   },
   "source": [
    "# Persisting o Modelo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:49:56.581240Z",
     "start_time": "2020-07-21T20:49:56.574877Z"
    }
   },
   "outputs": [],
   "source": [
    "import pickle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:49:57.770321Z",
     "start_time": "2020-07-21T20:49:57.764304Z"
    }
   },
   "outputs": [],
   "source": [
    "##Persisting do Modelo\n",
    "filename = 'KNN.sav'\n",
    "pickle.dump(kmeans, open(filename, 'wb'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-07-21T20:49:58.692342Z",
     "start_time": "2020-07-21T20:49:58.662741Z"
    }
   },
   "outputs": [],
   "source": [
    "##Persisting do Modelo\n",
    "filename = 'Xgboost.sav'\n",
    "pickle.dump(best_model, open(filename, 'wb'))"
   ]
  }
 ],
 "metadata": {
  "hide_input": false,
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {
    "height": "196px",
    "width": "581px"
   },
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "364.25px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
